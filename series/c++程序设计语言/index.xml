<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C&#43;&#43;程序设计语言 - 系列 - Dling</title>
        <link>http://example.org/series/c&#43;&#43;%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/</link>
        <description>C&#43;&#43;程序设计语言 - 系列 - Dling</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>897862595@qq.com (煜江叔叔)</managingEditor>
            <webMaster>897862595@qq.com (煜江叔叔)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 07 Nov 2022 15:55:29 &#43;0800</lastBuildDate><atom:link href="http://example.org/series/c&#43;&#43;%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/" rel="self" type="application/rss+xml" /><item>
    <title>C&#43;&#43;选择适当操作</title>
    <link>http://example.org/2022/c-%E9%80%89%E6%8B%A9%E9%80%82%E5%BD%93%E6%93%8D%E4%BD%9C/</link>
    <pubDate>Mon, 07 Nov 2022 15:55:29 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E9%80%89%E6%8B%A9%E9%80%82%E5%BD%93%E6%93%8D%E4%BD%9C/</guid>
    <description><![CDATA[其他运算符逻辑运算符逻辑运算符&amp;&amp;、||和！接受算数类型以及指针类型的运算对象。将其转换成bool类型。最后返回一个bool]]></description>
</item><item>
    <title>C&#43;&#43;表达式</title>
    <link>http://example.org/2022/c-%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
    <pubDate>Mon, 31 Oct 2022 19:31:31 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
    <description><![CDATA[桌面计算器实例计算器包含四个部分：分析器、输入函数、符号表和驱动。实际上，它的功能类似一个微型编译器：其中分析器负责分析语法，输入函数负责处]]></description>
</item><item>
    <title>C&#43;&#43;结构联合与枚举</title>
    <link>http://example.org/2022/c-%E7%BB%93%E6%9E%84%E8%81%94%E5%90%88%E4%B8%8E%E6%9E%9A%E4%B8%BE/</link>
    <pubDate>Thu, 27 Oct 2022 19:58:33 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E7%BB%93%E6%9E%84%E8%81%94%E5%90%88%E4%B8%8E%E6%9E%9A%E4%B8%BE/</guid>
    <description><![CDATA[结构数组是相同类型的集合，相反，struct是任意类型元素的集合： 1 2 3 4 5 6 7 8 struct Address{ const char* name; int number; const char* street; const char* town; char state[2]; const char* zip; }; 声明Address类]]></description>
</item><item>
    <title>C&#43;&#43;语句</title>
    <link>http://example.org/2022/c-%E8%AF%AD%E5%8F%A5/</link>
    <pubDate>Thu, 27 Oct 2022 19:32:24 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E8%AF%AD%E5%8F%A5/</guid>
    <description><![CDATA[选择语句switch语句case分支中的声明C++允许在switch语句的块内声明变量，但是不能不初始化： 1 2 3 4 5 6 7 8 void f(int i){ switch(i){ case 0: int x; /]]></description>
</item><item>
    <title>C&#43;&#43;指针与引用</title>
    <link>http://example.org/2022/c-%E6%8C%87%E9%92%88%E4%B8%8E%E5%BC%95%E7%94%A8/</link>
    <pubDate>Mon, 24 Oct 2022 19:23:55 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E6%8C%87%E9%92%88%E4%B8%8E%E5%BC%95%E7%94%A8/</guid>
    <description><![CDATA[指针对于类型T来说，T是表示“指向T的指针”的；类型。换句话说，T类型的变量能存放T类型对象的地址： 1 2 char c = &#39;a&#39;; char* p = &amp;c; //p存放c的地址 对]]></description>
</item><item>
    <title>C&#43;&#43;类型与声明</title>
    <link>http://example.org/2022/c-%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%A3%B0%E6%98%8E/</link>
    <pubDate>Thu, 20 Oct 2022 19:36:20 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%A3%B0%E6%98%8E/</guid>
    <description><![CDATA[类型布尔值根据定义，当我们想把布尔值转换成整数时，trye转为1，false转为0。反之，整数值也能在需需要的时候隐式的转换成布尔值，其中非]]></description>
</item><item>
    <title>C&#43;&#43;概览抽象机制</title>
    <link>http://example.org/2022/c-%E6%A6%82%E8%A7%88%E6%8A%BD%E8%B1%A1%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Tue, 18 Oct 2022 19:14:46 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E6%A6%82%E8%A7%88%E6%8A%BD%E8%B1%A1%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[类三种重要类的基本支持: 具体类； 抽象类； 类层次中的类。 很多有用的类都可以归为这三个类别，其他类可以看成是这些类别的简单变形或组合。 具体类型具]]></description>
</item><item>
    <title>C&#43;&#43;概览基础知识</title>
    <link>http://example.org/2022/c-%E6%A6%82%E8%A7%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
    <pubDate>Sun, 16 Oct 2022 17:41:08 &#43;0800</pubDate><author>
        <name>煜江叔叔</name>
    </author><guid>http://example.org/2022/c-%E6%A6%82%E8%A7%88%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
    <description><![CDATA[类型在定义一个变量时，如果变量的类型可以由初始化器推断得到，则无须显式指定其类型： 1 2 3 4 5 auto b = true; //bool auto ch = &#39;x&#39;; //char auto i = 123; //int auto d = 1.2; //double auto z = sqrt(y);]]></description>
</item></channel>
</rss>
